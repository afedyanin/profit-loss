<?xml version="1.0"?>
<RuleSet Name="All Rules with default action" Description="All Rules with default action. Rules with IsEnabledByDefault = false are disabled." ToolsVersion="15.0">
   <Rules AnalyzerId="Microsoft.CodeAnalysis.VersionCheckAnalyzer" RuleNamespace="Microsoft.CodeAnalysis.VersionCheckAnalyzer">
      <Rule Id="CA9999" Action="Warning" />          <!-- Analyzer version mismatch -->
   </Rules>
   <Rules AnalyzerId="Microsoft.CodeQuality.Analyzers" RuleNamespace="Microsoft.CodeQuality.Analyzers">
      <Rule Id="CA1000" Action="Error" />          <!-- Do not declare static members on generic types -->
      <Rule Id="CA1008" Action="Error" />             <!-- Enums should have zero value -->
      <Rule Id="CA1010" Action="Error" />          <!-- Collections should implement generic interface -->
      <Rule Id="CA1012" Action="Error" />             <!-- Abstract types should not have constructors -->
      <Rule Id="CA1014" Action="None" />             <!-- Mark assemblies with CLSCompliant -->
      <Rule Id="CA1016" Action="None" />          <!-- Mark assemblies with assembly version -->
      <Rule Id="CA1017" Action="None" />             <!-- Mark assemblies with ComVisible -->
      <Rule Id="CA1018" Action="Error" />          <!-- Mark attributes with AttributeUsageAttribute -->
      <Rule Id="CA1024" Action="Warning" />             <!-- Use properties where appropriate -->
      <Rule Id="CA1027" Action="Error" />             <!-- Mark enums with FlagsAttribute -->
      <Rule Id="CA1028" Action="Error" />          <!-- Enum Storage should be Int32 -->
      <Rule Id="CA1030" Action="None" />          <!-- Use events where appropriate -->
      <Rule Id="CA1031" Action="None" />          <!-- Do not catch general exception types -->
      <Rule Id="CA1033" Action="Error" />             <!-- Interface methods should be callable by child types -->
      <Rule Id="CA1034" Action="Error" />          <!-- Nested types should not be visible -->
      <Rule Id="CA1036" Action="Error" />          <!-- Override methods on comparable types -->
      <Rule Id="CA1040" Action="None" />          <!-- Avoid empty interfaces -->
      <Rule Id="CA1041" Action="Error" />          <!-- Provide ObsoleteAttribute message -->
      <Rule Id="CA1043" Action="Error" />          <!-- Use Integral Or String Argument For Indexers -->
      <Rule Id="CA1044" Action="Error" />          <!-- Properties should not be write only -->
      <Rule Id="CA1050" Action="Error" />             <!-- Declare types in namespaces -->
      <Rule Id="CA1051" Action="Error" />          <!-- Do not declare visible instance fields -->
      <Rule Id="CA1052" Action="Error" />          <!-- Static holder types should be Static or NotInheritable -->
      <Rule Id="CA1054" Action="None" />          <!-- Uri parameters should not be strings -->
      <Rule Id="CA1055" Action="None" />          <!-- Uri return values should not be strings -->
      <Rule Id="CA1056" Action="None" />          <!-- Uri properties should not be strings -->
      <Rule Id="CA1060" Action="Error" />             <!-- Move pinvokes to native methods class -->
      <Rule Id="CA1061" Action="Error" />          <!-- Do not hide base class methods -->
      <Rule Id="CA1062" Action="Error" />          <!-- Validate arguments of public methods -->
      <Rule Id="CA1063" Action="Warning" />          <!-- Implement IDisposable Correctly -->
      <Rule Id="CA1064" Action="Error" />          <!-- Exceptions should be public -->
      <Rule Id="CA1066" Action="Error" />          <!-- Type {0} should implement IEquatable<T> because it overrides Equals -->
      <Rule Id="CA1067" Action="Error" />          <!-- Override Object.Equals(object) when implementing IEquatable<T> -->
      <Rule Id="CA1068" Action="Error" />          <!-- CancellationToken parameters must come last -->
      <Rule Id="CA1501" Action="Error" />             <!-- Avoid excessive inheritance -->
      <Rule Id="CA1502" Action="Error" />             <!-- Avoid excessive complexity -->
      <Rule Id="CA1505" Action="Error" />             <!-- Avoid unmaintainable code -->
      <Rule Id="CA1506" Action="Error" />             <!-- Avoid excessive class coupling -->
      <Rule Id="CA1508" Action="Error" />             <!-- Avoid dead conditional code -->
      <Rule Id="CA1509" Action="None" />             <!-- Invalid entry in code metrics rule specification file -->
      <Rule Id="CA1707" Action="Error" />          <!-- Identifiers should not contain underscores -->
      <Rule Id="CA1708" Action="Error" />             <!-- Identifiers should differ by more than case -->
      <Rule Id="CA1710" Action="Error" />          <!-- Identifiers should have correct suffix -->
      <Rule Id="CA1711" Action="Error" />             <!-- Identifiers should not have incorrect suffix -->
      <Rule Id="CA1712" Action="Error" />          <!-- Do not prefix enum values with type name -->
      <Rule Id="CA1714" Action="Error" />          <!-- Flags enums should have plural names -->
      <Rule Id="CA1715" Action="Error" />          <!-- Identifiers should have correct prefix -->
      <Rule Id="CA1716" Action="Error" />          <!-- Identifiers should not match keywords -->
      <Rule Id="CA1717" Action="Error" />          <!-- Only FlagsAttribute enums should have plural names -->
      <Rule Id="CA1720" Action="Error" />          <!-- Identifier contains type name -->
      <Rule Id="CA1721" Action="Error" />          <!-- Property names should not match get methods -->
      <Rule Id="CA1724" Action="Error" />          <!-- Type names should not match namespaces -->
      <Rule Id="CA1725" Action="Error" />             <!-- Parameter names should match base declaration -->
      <Rule Id="CA1801" Action="Warning" />          <!-- Review unused parameters -->
      <Rule Id="CA1802" Action="Error" />          <!-- Use literals where appropriate -->
      <Rule Id="CA1806" Action="None" />          <!-- Do not ignore method results -->
      <Rule Id="CA1812" Action="Error" />          <!-- Avoid uninstantiated internal classes -->
      <Rule Id="CA1814" Action="Error" />          <!-- Prefer jagged arrays over multidimensional -->
      <Rule Id="CA1815" Action="Error" />          <!-- Override equals and operator equals on value types -->
      <Rule Id="CA1819" Action="Warning" />          <!-- Properties should not return arrays -->
      <Rule Id="CA1822" Action="Warning" />          <!-- Mark members as static -->
      <Rule Id="CA1823" Action="Error" />          <!-- Avoid unused private fields -->
      <Rule Id="CA1827" Action="Error" />          <!-- Do not use Count() when Any() can be used -->
      <Rule Id="CA2007" Action="None" />          <!-- Consider calling ConfigureAwait on the awaited task -->
      <Rule Id="CA2119" Action="Error" />          <!-- Seal methods that satisfy private interfaces -->
      <Rule Id="CA2211" Action="Error" />          <!-- Non-constant fields should not be visible -->
      <Rule Id="CA2214" Action="Error" />          <!-- Do not call overridable methods in constructors -->
      <Rule Id="CA2217" Action="Error" />             <!-- Do not mark enums with FlagsAttribute -->
      <Rule Id="CA2219" Action="Error" />          <!-- Do not raise exceptions in finally clauses -->
      <Rule Id="CA2225" Action="Error" />          <!-- Operator overloads have named alternates -->
      <Rule Id="CA2226" Action="Error" />          <!-- Operators should have symmetrical overloads -->
      <Rule Id="CA2227" Action="Error" />          <!-- Collection properties should be read only -->
      <Rule Id="CA2231" Action="Error" />          <!-- Overload operator equals on overriding value type Equals -->
      <Rule Id="CA2244" Action="Error" />          <!-- Do not duplicate indexed element initializations -->
      <Rule Id="CA2245" Action="Error" />          <!-- Do not assign a property to itself. -->
   </Rules>
   <Rules AnalyzerId="Microsoft.CodeQuality.CSharp.Analyzers" RuleNamespace="Microsoft.CodeQuality.CSharp.Analyzers">
      <Rule Id="CA1001" Action="Error" />          <!-- Types that own disposable fields should be disposable -->
      <Rule Id="CA1003" Action="Error" />             <!-- Use generic event handler instances -->
      <Rule Id="CA1019" Action="Error" />             <!-- Define accessors for attribute arguments -->
      <Rule Id="CA1032" Action="Error" />          <!-- Implement standard exception constructors -->
      <Rule Id="CA1065" Action="Error" />          <!-- Do not raise exceptions in unexpected locations -->
      <Rule Id="CA1200" Action="Error" />          <!-- Avoid using cref tags with a prefix -->
      <Rule Id="CA1507" Action="Error" />          <!-- Use nameof to express symbol names -->
      <Rule Id="CA1821" Action="Error" />          <!-- Remove empty Finalizers -->
      <Rule Id="CA2200" Action="Error" />          <!-- Rethrow to preserve stack details. -->
      <Rule Id="CA2234" Action="None" />          <!-- Pass system uri objects instead of strings -->
   </Rules>
   <Rules AnalyzerId="Microsoft.NetCore.Analyzers" RuleNamespace="Microsoft.NetCore.Analyzers">
      <Rule Id="CA1303" Action="None" />          <!-- Do not pass literals as localized parameters -->
      <Rule Id="CA1304" Action="None" />          <!-- Specify CultureInfo -->
      <Rule Id="CA1305" Action="None" />          <!-- Specify IFormatProvider -->
      <Rule Id="CA1307" Action="Error" />          <!-- Specify StringComparison -->
      <Rule Id="CA1308" Action="Warning" />          <!-- Normalize strings to uppercase -->
      <Rule Id="CA1401" Action="Error" />          <!-- P/Invokes should not be visible -->
      <Rule Id="CA1813" Action="Error" />             <!-- Avoid unsealed attributes -->
      <Rule Id="CA1816" Action="None" />          <!-- Dispose methods should call SuppressFinalize -->
      <Rule Id="CA1820" Action="Error" />          <!-- Test for empty strings using string length -->
      <Rule Id="CA1826" Action="Error" />          <!-- Do not use Enumerable methods on indexable collections. Instead use the collection directly -->
      <Rule Id="CA2000" Action="Warning" />          <!-- Dispose objects before losing scope -->
      <Rule Id="CA2002" Action="Error" />          <!-- Do not lock on objects with weak identity -->
      <Rule Id="CA2008" Action="Error" />          <!-- Do not create tasks without passing a TaskScheduler -->
      <Rule Id="CA2009" Action="Error" />          <!-- Do not call ToImmutableCollection on an ImmutableCollection value -->
      <Rule Id="CA2100" Action="Error" />          <!-- Review SQL queries for security vulnerabilities -->
      <Rule Id="CA2101" Action="Error" />          <!-- Specify marshaling for P/Invoke string arguments -->
      <Rule Id="CA2208" Action="Error" />          <!-- Instantiate argument exceptions correctly -->
      <Rule Id="CA2213" Action="Error" />          <!-- Disposable fields should be disposed -->
      <Rule Id="CA2216" Action="None" />          <!-- Disposable types should declare finalizer -->
      <Rule Id="CA2229" Action="Error" />          <!-- Implement serialization constructors -->
      <Rule Id="CA2235" Action="Error" />          <!-- Mark all non-serializable fields -->
      <Rule Id="CA2237" Action="Error" />          <!-- Mark ISerializable types with serializable -->
      <Rule Id="CA2241" Action="Error" />          <!-- Provide correct arguments to formatting methods -->
      <Rule Id="CA2242" Action="Error" />          <!-- Test for NaN correctly -->
      <Rule Id="CA2243" Action="Error" />          <!-- Attribute string literals should parse correctly -->
      <Rule Id="CA2300" Action="Error" />             <!-- Do not use insecure deserializer BinaryFormatter -->
      <Rule Id="CA2301" Action="Error" />             <!-- Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder -->
      <Rule Id="CA2302" Action="Error" />             <!-- Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize -->
      <Rule Id="CA2305" Action="Error" />             <!-- Do not use insecure deserializer LosFormatter -->
      <Rule Id="CA2310" Action="Error" />             <!-- Do not use insecure deserializer NetDataContractSerializer -->
      <Rule Id="CA2311" Action="Error" />             <!-- Do not deserialize without first setting NetDataContractSerializer.Binder -->
      <Rule Id="CA2312" Action="Error" />             <!-- Ensure NetDataContractSerializer.Binder is set before deserializing -->
      <Rule Id="CA2315" Action="Error" />             <!-- Do not use insecure deserializer ObjectStateFormatter -->
      <Rule Id="CA2321" Action="Error" />             <!-- Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver -->
      <Rule Id="CA2322" Action="Error" />             <!-- Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing -->
      <Rule Id="CA2326" Action="Error" />             <!-- Do not use TypeNameHandling values other than Warning -->
      <Rule Id="CA2327" Action="Error" />             <!-- Do not use insecure JsonSerializerSettings -->
      <Rule Id="CA2328" Action="Error" />             <!-- Ensure that JsonSerializerSettings are secure -->
      <Rule Id="CA3001" Action="Error" />             <!-- Review code for SQL injection vulnerabilities -->
      <Rule Id="CA3002" Action="Error" />             <!-- Review code for XSS vulnerabilities -->
      <Rule Id="CA3003" Action="Error" />             <!-- Review code for file path injection vulnerabilities -->
      <Rule Id="CA3004" Action="Error" />             <!-- Review code for information disclosure vulnerabilities -->
      <Rule Id="CA3005" Action="Error" />             <!-- Review code for LDAP injection vulnerabilities -->
      <Rule Id="CA3006" Action="Error" />             <!-- Review code for process command injection vulnerabilities -->
      <Rule Id="CA3007" Action="Error" />             <!-- Review code for open redirect vulnerabilities -->
      <Rule Id="CA3008" Action="Error" />             <!-- Review code for XPath injection vulnerabilities -->
      <Rule Id="CA3009" Action="Error" />             <!-- Review code for XML injection vulnerabilities -->
      <Rule Id="CA3010" Action="Error" />             <!-- Review code for XAML injection vulnerabilities -->
      <Rule Id="CA3011" Action="Error" />             <!-- Review code for DLL injection vulnerabilities -->
      <Rule Id="CA3012" Action="Error" />             <!-- Review code for regex injection vulnerabilities -->
      <Rule Id="CA3061" Action="None" />          <!-- Do Not Add Schema By URL -->
      <Rule Id="CA5350" Action="None" />          <!-- Do Not Use Weak Cryptographic Algorithms -->
      <Rule Id="CA5351" Action="None" />          <!-- Do Not Use Broken Cryptographic Algorithms -->
      <Rule Id="CA5358" Action="None" />             <!-- Do Not Use Unsafe Cipher Modes -->
      <Rule Id="CA5359" Action="None" />          <!-- Do Not Disable Certificate Validation -->
      <Rule Id="CA5360" Action="Error" />          <!-- Do Not Call Dangerous Methods In Deserialization -->
      <Rule Id="CA5361" Action="Error" />          <!-- Do Not Disable SChannel Use of Strong Crypto -->
      <Rule Id="CA5362" Action="Error" />             <!-- Do Not Refer Self In Serializable Class -->
      <Rule Id="CA5363" Action="None" />          <!-- Do Not Disable Request Validation -->
      <Rule Id="CA5364" Action="None" />          <!-- Do Not Use Deprecated Security Protocols -->
      <Rule Id="CA5365" Action="None" />          <!-- Do Not Disable HTTP Header Checking -->
      <Rule Id="CA5366" Action="Error" />          <!-- Use XmlReader For DataSet Read Xml -->
      <Rule Id="CA5367" Action="Error" />             <!-- Do Not Serialize Types With Pointer Fields -->
      <Rule Id="CA5368" Action="Error" />          <!-- Set ViewStateUserKey For Classes Derived From Page -->
      <Rule Id="CA5369" Action="Error" />          <!-- Use XmlReader For Deserialize -->
      <Rule Id="CA5370" Action="Error" />          <!-- Use XmlReader For Validating Reader -->
      <Rule Id="CA5371" Action="Error" />          <!-- Use XmlReader For Schema Read -->
      <Rule Id="CA5372" Action="Error" />          <!-- Use XmlReader For XPathDocument -->
      <Rule Id="CA5373" Action="Error" />          <!-- Do not use obsolete key derivation function -->
      <Rule Id="CA5374" Action="Error" />          <!-- Do Not Use XslTransform -->
      <Rule Id="CA5375" Action="Error" />             <!-- Do Not Use Account Shared Access Signature -->
      <Rule Id="CA5376" Action="Error" />          <!-- Use SharedAccessProtocol HttpsOnly -->
      <Rule Id="CA5377" Action="Error" />          <!-- Use Container Level Access Policy -->
      <Rule Id="CA5378" Action="None" />          <!-- Do not disable ServicePointManagerSecurityProtocols -->
      <Rule Id="CA5379" Action="Error" />          <!-- Do Not Use Weak Key Derivation Function Algorithm -->
      <Rule Id="CA5380" Action="None" />          <!-- Do Not Add Certificates To Root Store -->
      <Rule Id="CA5381" Action="None" />          <!-- Ensure Certificates Are Not Added To Root Store -->
      <Rule Id="CA5382" Action="Error" />             <!-- Use Secure Cookies In ASP.Net Core -->
      <Rule Id="CA5383" Action="Error" />             <!-- Ensure Use Secure Cookies In ASP.Net Core -->
      <Rule Id="CA5384" Action="Error" />          <!-- Do Not Use Digital Signature Algorithm (DSA) -->
      <Rule Id="CA5385" Action="Error" />          <!-- Use Rivest–Shamir–Adleman (RSA) Algorithm With Sufficient Key Size -->
      <Rule Id="CA5386" Action="Error" />             <!-- Avoid hardcoding SecurityProtocolType value -->
      <Rule Id="CA5387" Action="Error" />             <!-- Do Not Use Weak Key Derivation Function With Insufficient Iteration Count -->
      <Rule Id="CA5388" Action="Error" />             <!-- Ensure Sufficient Iteration Count When Using Weak Key Derivation Function -->
      <Rule Id="CA5389" Action="Error" />          <!-- Do Not Add Archive Item's Path To The Target File System Path -->
      <Rule Id="CA5390" Action="Error" />          <!-- Do Not Hard Code Encryption Key -->
   </Rules>
   <Rules AnalyzerId="Microsoft.NetCore.CSharp.Analyzers" RuleNamespace="Microsoft.NetCore.CSharp.Analyzers">
      <Rule Id="CA1309" Action="None" />             <!-- Use ordinal stringcomparison -->
      <Rule Id="CA1810" Action="Error" />          <!-- Initialize reference type static fields inline -->
      <Rule Id="CA1824" Action="None" />          <!-- Mark assemblies with NeutralResourcesLanguageAttribute -->
      <Rule Id="CA1825" Action="Error" />          <!-- Avoid zero-length array allocations. -->
      <Rule Id="CA2010" Action="None" />          <!-- Always consume the value returned by methods marked with PreserveSigAttribute -->
      <Rule Id="CA2201" Action="Error" />             <!-- Do not raise reserved exception types -->
      <Rule Id="CA2207" Action="Error" />          <!-- Initialize value type static fields inline -->
   </Rules>
   <Rules AnalyzerId="Microsoft.NetFramework.Analyzers" RuleNamespace="Microsoft.NetFramework.Analyzers">
      <Rule Id="CA1058" Action="Error" />          <!-- Types should not extend certain base types -->
      <Rule Id="CA2153" Action="Error" />          <!-- Do Not Catch Corrupted State Exceptions -->
      <Rule Id="CA3075" Action="Error" />          <!-- Insecure DTD processing in XML -->
      <Rule Id="CA3147" Action="Error" />          <!-- Mark Verb Handlers With Validate Antiforgery Token -->
   </Rules>
   <Rules AnalyzerId="Microsoft.NetFramework.CSharp.Analyzers" RuleNamespace="Microsoft.NetFramework.CSharp.Analyzers">
      <Rule Id="CA3076" Action="Error" />          <!-- Insecure XSLT script processing. -->
      <Rule Id="CA3077" Action="Error" />          <!-- Insecure Processing in API Design, XmlDocument and XmlTextReader -->
   </Rules>
    <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers.SpecialRules">
        <Rule Id="SA0001"  Action="None" />          <!-- XML comment analysis disabled -->
        <Rule Id="SA0002"  Action="None" />          <!-- Invalid settings file -->
    </Rules>
    <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers.SpacingRules">
        <Rule Id="SA1000"  Action="Error" />          <!-- Keywords should be spaced correctly -->
        <Rule Id="SA1001"  Action="Error" />          <!-- Commas should be spaced correctly -->
        <Rule Id="SA1002"  Action="Error" />          <!-- Semicolons should be spaced correctly -->
        <Rule Id="SA1003"  Action="Error" />          <!-- Symbols should be spaced correctly -->
        <Rule Id="SA1004"  Action="Error" />          <!-- Documentation lines should begin with single space -->
        <Rule Id="SA1005"  Action="Error" />          <!-- Single line comments should begin with single space -->
        <Rule Id="SA1006"  Action="Error" />          <!-- Preprocessor keywords should not be preceded by space -->
        <Rule Id="SA1007"  Action="Error" />          <!-- Operator keyword should be followed by space -->
        <Rule Id="SA1008"  Action="Error" />          <!-- Opening parenthesis should be spaced correctly -->
        <Rule Id="SA1009"  Action="Error" />          <!-- Closing parenthesis should be spaced correctly -->
        <Rule Id="SA1010"  Action="Error" />          <!-- Opening square brackets should be spaced correctly -->
        <Rule Id="SA1011"  Action="Error" />          <!-- Closing square brackets should be spaced correctly -->
        <Rule Id="SA1012"  Action="Error" />          <!-- Opening braces should be spaced correctly -->
        <Rule Id="SA1013"  Action="Error" />          <!-- Closing braces should be spaced correctly -->
        <Rule Id="SA1014"  Action="Error" />          <!-- Opening generic brackets should be spaced correctly -->
        <Rule Id="SA1015"  Action="Error" />          <!-- Closing generic brackets should be spaced correctly -->
        <Rule Id="SA1016"  Action="Error" />          <!-- Opening attribute brackets should be spaced correctly -->
        <Rule Id="SA1017"  Action="Error" />          <!-- Closing attribute brackets should be spaced correctly -->
        <Rule Id="SA1018"  Action="Error" />          <!-- Nullable type symbols should be spaced correctly -->
        <Rule Id="SA1019"  Action="Error" />          <!-- Member access symbols should be spaced correctly -->
        <Rule Id="SA1020"  Action="Error" />          <!-- Increment decrement symbols should be spaced correctly -->
        <Rule Id="SA1021"  Action="Error" />          <!-- Negative signs should be spaced correctly -->
        <Rule Id="SA1022"  Action="Error" />          <!-- Positive signs should be spaced correctly -->
        <Rule Id="SA1023"  Action="Error" />          <!-- Dereference and access of symbols should be spaced correctly -->
        <Rule Id="SA1024"  Action="Error" />          <!-- Colons should be spaced correctly -->
        <Rule Id="SA1025"  Action="Error" />          <!-- Code should not contain multiple whitespace in a row -->
        <Rule Id="SA1026"  Action="Error" />          <!-- Code should not contain space after new or stackalloc keyword in implicitly typed array allocation -->
        <Rule Id="SA1027"  Action="None" />          <!-- Use tabs correctly -->
        <Rule Id="SA1028"  Action="None" />          <!-- Code should not contain trailing whitespace -->
    </Rules>
   
    <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers.ReadabilityRules">
        <Rule Id="SA1100"  Action="Error" />          <!-- Do not prefix calls with base unless local implementation exists -->
        <Rule Id="SA1101"  Action="None" />          <!-- Prefix local calls with this -->
        <Rule Id="SA1102"  Action="None" />          <!-- Query clause should follow previous clause -->
        <Rule Id="SA1103"  Action="None" />          <!-- Query clauses should be on separate lines or all on one line -->
        <Rule Id="SA1104"  Action="None" />          <!-- Query clause should begin on new line when previous clause spans multiple lines -->
        <Rule Id="SA1105"  Action="None" />          <!-- Query clauses spanning multiple lines should begin on own line -->
        <Rule Id="SA1106"  Action="Error" />          <!-- Code should not contain empty statements -->
        <Rule Id="SA1107"  Action="Error" />          <!-- Code should not contain multiple statements on one line -->
        <Rule Id="SA1108"  Action="Error" />          <!-- Block statements should not contain embedded comments -->
        <Rule Id="SA1109"  Action="Error" />             <!-- Block statements should not contain embedded regions -->
        <Rule Id="SA1110"  Action="Error" />          <!-- Opening parenthesis or bracket should be on declaration line -->
        <Rule Id="SA1111"  Action="Error" />          <!-- Closing parenthesis should be on line of last parameter -->
        <Rule Id="SA1112"  Action="Error" />          <!-- Closing parenthesis should be on line of opening parenthesis -->
        <Rule Id="SA1113"  Action="Error" />          <!-- Comma should be on the same line as previous parameter -->
        <Rule Id="SA1114"  Action="Error" />          <!-- Parameter list should follow declaration -->
        <Rule Id="SA1115"  Action="Error" />          <!-- Parameter should follow comma -->
        <Rule Id="SA1116"  Action="Error" />          <!-- Split parameters should start on line after declaration -->
        <Rule Id="SA1117"  Action="Error" />          <!-- Parameters should be on same line or separate lines -->
        <Rule Id="SA1118"  Action="Error" />          <!-- Parameter should not span multiple lines -->
        <Rule Id="SA1120"  Action="Error" />          <!-- Comments should contain text -->
        <Rule Id="SA1121"  Action="Error" />          <!-- Use built-in type alias -->
        <Rule Id="SA1122"  Action="None" />          <!-- Use string.Empty for empty strings -->
        <Rule Id="SA1123"  Action="Error" />          <!-- Do not place regions within elements -->
        <Rule Id="SA1124"  Action="None" />          <!-- Do not use regions -->
        <Rule Id="SA1125"  Action="Error" />          <!-- Use shorthand for nullable types -->
        <Rule Id="SA1126"  Action="None" />             <!-- Prefix calls correctly -->
        <Rule Id="SA1127"  Action="None" />          <!-- Generic type constraints should be on their own line -->
        <Rule Id="SA1128"  Action="None" />          <!-- Put constructor initializers on their own line -->
        <Rule Id="SA1129"  Action="Error" />          <!-- Do not use default value type constructor -->
        <Rule Id="SA1130"  Action="Error" />          <!-- Use lambda syntax -->
        <Rule Id="SA1131"  Action="Error" />          <!-- Use readable conditions -->
        <Rule Id="SA1132"  Action="Error" />          <!-- Do not combine fields -->
        <Rule Id="SA1133"  Action="Error" />          <!-- Do not combine attributes -->
        <Rule Id="SA1134"  Action="Error" />          <!-- Attributes should not share line -->
        <Rule Id="SA1135"  Action="Error" />          <!-- Using directives should be qualified -->
        <Rule Id="SA1136"  Action="Error" />          <!-- Enum values should be on separate lines -->
        <Rule Id="SA1137"  Action="Error" />          <!-- Elements should have the same indentation -->
        <Rule Id="SA1139"  Action="Error" />          <!-- Use literal suffix notation instead of casting -->
        <Rule Id="SX1101"  Action="Error" />             <!-- Do not prefix local calls with 'this.' -->
    </Rules>
	
    <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers.OrderingRules">
        <Rule Id="SA1200"  Action="None" />          <!-- Using directives should be placed correctly -->
        <Rule Id="SA1201"  Action="Error" />          <!-- Elements should appear in the correct order -->
        <Rule Id="SA1202"  Action="Error" />          <!-- Elements should be ordered by access -->
        <Rule Id="SA1203"  Action="Error" />          <!-- Constants should appear before fields -->
        <Rule Id="SA1204"  Action="Error" />          <!-- Static elements should appear before instance elements -->
        <Rule Id="SA1205"  Action="Error" />          <!-- Partial elements should declare access -->
        <Rule Id="SA1206"  Action="Error" />          <!-- Declaration keywords should follow order -->
        <Rule Id="SA1207"  Action="Error" />          <!-- Protected should come before internal -->
        <Rule Id="SA1208"  Action="Error" />          <!-- System using directives should be placed before other using directives -->
        <Rule Id="SA1209"  Action="Error" />          <!-- Using alias directives should be placed after other using directives -->
        <Rule Id="SA1210"  Action="Error" />          <!-- Using directives should be ordered alphabetically by namespace -->
        <Rule Id="SA1211"  Action="Error" />          <!-- Using alias directives should be ordered alphabetically by alias name -->
        <Rule Id="SA1212"  Action="Error" />          <!-- Property accessors should follow order -->
        <Rule Id="SA1213"  Action="Error" />          <!-- Event accessors should follow order -->
        <Rule Id="SA1214"  Action="Error" />          <!-- Readonly fields should appear before non-readonly fields -->
        <Rule Id="SA1216"  Action="Error" />          <!-- Using static directives should be placed at the correct location -->
        <Rule Id="SA1217"  Action="Error" />          <!-- Using static directives should be ordered alphabetically -->
    </Rules>

    <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers.NamingRules">
        <Rule Id="SA1300"  Action="None" />          <!-- Element should begin with upper-case letter -->
        <Rule Id="SA1301"  Action="Error" />             <!-- Element should begin with lower-case letter -->
        <Rule Id="SA1302"  Action="Error" />          <!-- Interface names should begin with I -->
        <Rule Id="SA1303"  Action="Warning" />          <!-- Const field names should begin with upper-case letter -->
        <Rule Id="SA1304"  Action="Error" />          <!-- Non-private readonly fields should begin with upper-case letter -->
        <Rule Id="SA1305"  Action="Error" />             <!-- Field names should not use Hungarian notation -->
        <Rule Id="SA1306"  Action="Error" />          <!-- Field names should begin with lower-case letter -->
        <Rule Id="SA1307"  Action="Error" />          <!-- Accessible fields should begin with upper-case letter -->
        <Rule Id="SA1308"  Action="Error" />          <!-- Variable names should not be prefixed -->
        <Rule Id="SA1309"  Action="None" />          <!-- Field names should not begin with underscore -->
        <Rule Id="SA1310"  Action="Error" />          <!-- Field names should not contain underscore -->
        <Rule Id="SA1311"  Action="None" />          <!-- Static readonly fields should begin with upper-case letter -->
        <Rule Id="SA1312"  Action="Error" />          <!-- Variable names should begin with lower-case letter -->
        <Rule Id="SA1313"  Action="Error" />          <!-- Parameter names should begin with lower-case letter -->
        <Rule Id="SA1314"  Action="Error" />          <!-- Type parameter names should begin with T -->
        <Rule Id="SX1309"  Action="None" />             <!-- Field names should begin with underscore -->
        <Rule Id="SX1309S" Action="None" />             <!-- Static field names should begin with underscore -->
    </Rules>

    <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers.MaintainabilityRules">
        <Rule Id="SA1119"  Action="Error" />          <!-- Statement should not use unnecessary parenthesis -->
        <Rule Id="SA1400"  Action="Error" />          <!-- Access modifier should be declared -->
        <Rule Id="SA1401"  Action="Error" />          <!-- Fields should be private -->
        <Rule Id="SA1402"  Action="Error" />          <!-- File may only contain a single type -->
        <Rule Id="SA1403"  Action="Error" />          <!-- File may only contain a single namespace -->
        <Rule Id="SA1404"  Action="None" />          <!-- Code analysis suppression should have justification -->
        <Rule Id="SA1405"  Action="Error" />          <!-- Debug.Assert should provide message text -->
        <Rule Id="SA1406"  Action="Error" />          <!-- Debug.Fail should provide message text -->
        <Rule Id="SA1407"  Action="Error" />          <!-- Arithmetic expressions should declare precedence -->
        <Rule Id="SA1408"  Action="Error" />          <!-- Conditional expressions should declare precedence -->
        <Rule Id="SA1409"  Action="Error"    />          <!-- Remove unnecessary code -->
        <Rule Id="SA1410"  Action="Error" />          <!-- Remove delegate parenthesis when possible -->
        <Rule Id="SA1411"  Action="Error" />          <!-- Attribute constructor should not use unnecessary parenthesis -->
        <Rule Id="SA1412"  Action="None"    />          <!-- Store files as UTF-8 with byte order mark -->
        <Rule Id="SA1413"  Action="Error" />          <!-- Use trailing comma in multi-line initializers -->
    </Rules>
	
    <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers.LayoutRules">
        <Rule Id="SA1500"  Action="Error" />          <!-- Braces for multi-line statements should not share line -->
        <Rule Id="SA1501"  Action="Error" />          <!-- Statement should not be on a single line -->
        <Rule Id="SA1502"  Action="Error" />          <!-- Element should not be on a single line -->
        <Rule Id="SA1503"  Action="Error" />          <!-- Braces should not be omitted -->
        <Rule Id="SA1504"  Action="Error" />          <!-- All accessors should be single-line or multi-line -->
        <Rule Id="SA1505"  Action="Error" />          <!-- Opening braces should not be followed by blank line -->
        <Rule Id="SA1506"  Action="None" />          <!-- Element documentation headers should not be followed by blank line -->
        <Rule Id="SA1507"  Action="Error" />          <!-- Code should not contain multiple blank lines in a row -->
        <Rule Id="SA1508"  Action="Error" />          <!-- Closing braces should not be preceded by blank line -->
        <Rule Id="SA1509"  Action="Error" />          <!-- Opening braces should not be preceded by blank line -->
        <Rule Id="SA1510"  Action="Error" />          <!-- Chained statement blocks should not be preceded by blank line -->
        <Rule Id="SA1511"  Action="Error" />          <!-- While-do footer should not be preceded by blank line -->
        <Rule Id="SA1512"  Action="Error" />          <!-- Single-line comments should not be followed by blank line -->
        <Rule Id="SA1513"  Action="Error" />          <!-- Closing brace should be followed by blank line -->
        <Rule Id="SA1514"  Action="None" />          <!-- Element documentation header should be preceded by blank line -->
        <Rule Id="SA1515"  Action="Error" />          <!-- Single-line comment should be preceded by blank line -->
        <Rule Id="SA1516"  Action="Error" />          <!-- Elements should be separated by blank line -->
        <Rule Id="SA1517"  Action="Error" />          <!-- Code should not contain blank lines at start of file -->
        <Rule Id="SA1518"  Action="Error" />          <!-- Use line endings correctly at end of file -->
        <Rule Id="SA1519"  Action="Error" />          <!-- Braces should not be omitted from multi-line child statement -->
        <Rule Id="SA1520"  Action="Error" />          <!-- Use braces consistently -->
    </Rules>
	
    <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers.DocumentationRules">
        <Rule Id="SA1600"  Action="None" />          <!-- Elements should be documented -->
        <Rule Id="SA1601"  Action="None" />          <!-- Partial elements should be documented -->
        <Rule Id="SA1602"  Action="None" />          <!-- Enumeration items should be documented -->
        <Rule Id="SA1603"  Action="None" />             <!-- Documentation should contain valid XML -->
        <Rule Id="SA1604"  Action="None" />          <!-- Element documentation should have summary -->
        <Rule Id="SA1605"  Action="None" />          <!-- Partial element documentation should have summary -->
        <Rule Id="SA1606"  Action="None" />          <!-- Element documentation should have summary text -->
        <Rule Id="SA1607"  Action="None" />          <!-- Partial element documentation should have summary text -->
        <Rule Id="SA1608"  Action="None" />          <!-- Element documentation should not have default summary -->
        <Rule Id="SA1609"  Action="None" />             <!-- Property documentation should have value -->
        <Rule Id="SA1610"  Action="None" />          <!-- Property documentation should have value text -->
        <Rule Id="SA1611"  Action="None" />          <!-- Element parameters should be documented -->
        <Rule Id="SA1612"  Action="None" />          <!-- Element parameter documentation should match element parameters -->
        <Rule Id="SA1613"  Action="None" />          <!-- Element parameter documentation should declare parameter name -->
        <Rule Id="SA1614"  Action="None" />          <!-- Element parameter documentation should have text -->
        <Rule Id="SA1615"  Action="None" />          <!-- Element return value should be documented -->
        <Rule Id="SA1616"  Action="None" />          <!-- Element return value documentation should have text -->
        <Rule Id="SA1617"  Action="None" />          <!-- Void return value should not be documented -->
        <Rule Id="SA1618"  Action="None" />          <!-- Generic type parameters should be documented -->
        <Rule Id="SA1619"  Action="None" />          <!-- Generic type parameters should be documented partial class -->
        <Rule Id="SA1620"  Action="None" />          <!-- Generic type parameter documentation should match type parameters -->
        <Rule Id="SA1621"  Action="None" />          <!-- Generic type parameter documentation should declare parameter name -->
        <Rule Id="SA1622"  Action="None" />          <!-- Generic type parameter documentation should have text -->
        <Rule Id="SA1623"  Action="None" />          <!-- Property summary documentation should match accessors -->
        <Rule Id="SA1624"  Action="None" />          <!-- Property summary documentation should omit accessor with restricted access -->
        <Rule Id="SA1625"  Action="None" />          <!-- Element documentation should not be copied and pasted -->
        <Rule Id="SA1626"  Action="None" />          <!-- Single-line comments should not use documentation style slashes -->
        <Rule Id="SA1627"  Action="None" />          <!-- Documentation text should not be empty -->
        <Rule Id="SA1628"  Action="None" />             <!-- Documentation text should begin with a capital letter -->
        <Rule Id="SA1629"  Action="None" />          <!-- Documentation text should end with a period -->
        <Rule Id="SA1630"  Action="None" />             <!-- Documentation text should contain whitespace -->
        <Rule Id="SA1631"  Action="None" />             <!-- Documentation should meet character percentage -->
        <Rule Id="SA1632"  Action="None" />             <!-- Documentation text should meet minimum character length -->
        <Rule Id="SA1633"  Action="None" />          <!-- File should have header -->
        <Rule Id="SA1634"  Action="None" />          <!-- File header should show copyright -->
        <Rule Id="SA1635"  Action="None" />          <!-- File header should have copyright text -->
        <Rule Id="SA1636"  Action="None" />          <!-- File header copyright text should match -->
        <Rule Id="SA1637"  Action="None" />          <!-- File header should contain file name -->
        <Rule Id="SA1638"  Action="None" />          <!-- File header file name documentation should match file name -->
        <Rule Id="SA1639"  Action="None" />          <!-- File header should have summary -->
        <Rule Id="SA1640"  Action="None" />          <!-- File header should have valid company text -->
        <Rule Id="SA1641"  Action="None" />          <!-- File header company name text should match -->
        <Rule Id="SA1642"  Action="None" />          <!-- Constructor summary documentation should begin with standard text -->
        <Rule Id="SA1643"  Action="None" />          <!-- Destructor summary documentation should begin with standard text -->
        <Rule Id="SA1644"  Action="None" />             <!-- Documentation headers should not contain blank lines -->
        <Rule Id="SA1645"  Action="None" />             <!-- Included documentation file does not exist -->
        <Rule Id="SA1646"  Action="None" />             <!-- Included documentation XPath does not exist -->
        <Rule Id="SA1647"  Action="None" />             <!-- Include node does not contain valid file and path -->
        <Rule Id="SA1648"  Action="None" />          <!-- Inheritdoc should be used with inheriting class -->
        <Rule Id="SA1649"  Action="None" />          <!-- File name should match first type name -->
        <Rule Id="SA1650"  Action="None" />             <!-- Element documentation should be spelled correctly -->
        <Rule Id="SA1651"  Action="None" />          <!-- Do not use placeholder elements -->
    </Rules>
</RuleSet>
